{"version":3,"sources":["../../../src/api/controllers/invoice.controller.js"],"names":["findAll","req","res","json","message","create","body","item","qty","date","due","tax","rate","schema","Joi","object","keys","string","required","number","integer","optional","validate","error","value","details","status","Invoice","then","invoice","catch","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;kBAEe;AACPA,SADO;AAAA,wFACCC,GADD,EACMC,GADN;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJA,IAAIC,IAAJ,CAAS,EAAEC,SAAS,UAAX,EAAT,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIPC,QAJO;AAAA,0FAIAJ,GAJA,EAIKC,GAJL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKiCD,IAAIK,IALrC,EAKHC,IALG,aAKHA,IALG,EAKGC,GALH,aAKGA,GALH,EAKQC,IALR,aAKQA,IALR,EAKcC,GALd,aAKcA,GALd,EAKmBC,GALnB,aAKmBA,GALnB,EAKwBC,IALxB,aAKwBA,IALxB;AAOLC,oBAPK,GAOIC,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC/BT,sBAAMO,cAAIG,MAAJ,GAAaC,QAAb,EADyB;AAE/BT,sBAAMK,cAAIL,IAAJ,GAAWS,QAAX,EAFyB;AAG/BR,qBAAKI,cAAIL,IAAJ,GAAWS,QAAX,EAH0B;AAI/BV,qBAAKM,cAAIK,MAAJ,GAAaC,OAAb,GAAuBF,QAAvB,EAJ0B;AAK/BP,qBAAKG,cAAIK,MAAJ,GAAaE,QAAb,EAL0B;AAM/BT,sBAAME,cAAIK,MAAJ,GAAaE,QAAb;AANyB,eAAlB,CAPJ;AAAA,8BAgBcP,cAAIQ,QAAJ,CAAarB,IAAIK,IAAjB,EAAuBO,MAAvB,CAhBd,EAgBHU,KAhBG,iBAgBHA,KAhBG,EAgBIC,KAhBJ,iBAgBIA,KAhBJ;;AAAA,oBAkBPD,SAASA,MAAME,OAlBR;AAAA;AAAA;AAAA;;AAAA,gDAmBFvB,IAAIwB,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqBoB,MAAME,OAA3B,CAnBE;;AAAA;;AAsBXE,gCAAQtB,MAAR,CAAemB,KAAf,EACGI,IADH,CACQ,mBAAW;AACf,uBAAO1B,IAAIC,IAAJ,CAAS,EAAEC,SAASyB,OAAX,EAAT,CAAP;AACD,eAHH,EAGKC,KAHL,CAGW,eAAO;AACd,uBAAO5B,IAAIwB,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB,EAAEC,SAAS2B,GAAX,EAArB,CAAP;AACD,eALH;;AAtBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C","file":"invoice.controller.js","sourcesContent":["import Joi from 'joi';\r\nimport Invoice from '../models/invoice.model';\r\n\r\nexport default {\r\n  async findAll(req, res) {\r\n    return res.json({ message: 'Find All' });\r\n  },\r\n  async create(req, res) {\r\n    const { item, qty, date, due, tax, rate } = req.body\r\n\r\n    const schema = Joi.object().keys({\r\n      item: Joi.string().required(),\r\n      date: Joi.date().required(),\r\n      due: Joi.date().required(),\r\n      qty: Joi.number().integer().required(),\r\n      tax: Joi.number().optional(),\r\n      rate: Joi.number().optional(),\r\n    })\r\n\r\n    const { error, value } = Joi.validate(req.body, schema)\r\n\r\n    if (error && error.details) {\r\n      return res.status(400).json(error.details);\r\n    }\r\n\r\n    Invoice.create(value)\r\n      .then(invoice => {\r\n        return res.json({ message: invoice });\r\n      }).catch(err => {\r\n        return res.status(400).json({ message: err });\r\n      })\r\n  }\r\n};\r\n"]}